MARC 21 (Suomalaiset kuvailusäännöt) --> MARC 21 (RDA / hybridi)
27.1.2017 - Kansalliskirjasto / TV

#define version 317

#define macro KAANNOKSET | RegReplace('diagrs\\.', 'diagrams', 'g'); \
                           RegReplace('incl\\.', 'includes', 'g'); \
                           RegReplace('fold(\\.)* maps', 'folded maps', 'g'); \
                           RegReplace('online resource', 'verkkoaineisto', 'g'); \
                           RegReplace('approximately', 'noin', 'g'); \
                           RegReplace('\\bmin\\.|\\bmin\\b|minutes', 'minuuttia', 'g'); \
                           RegReplace('unnumbered', 'numeroimatonta', 'g'); \
                           RegReplace('color illustrations\\b|col\\. ill\\.', 'värikuvitus', 'g'); \
                           RegReplace('chiefly color illustrations', 'pääosin värikuvitettu', 'g'); \
                           RegReplace('ill\\b|illus(\\.|trated)|illustrations', 'kuvitettu', 'g'); \
                           RegReplace('black and white', 'mustavalkoinen', 'g'); \
                           RegReplace('\\s\\(some col\\.\\)', '', 'g'); \
                           RegReplace('\\bcharts\\b', 'kaavioita', 'g'); \
                           RegReplace('\\bports\\.|\\bportraits', 'muotokuvia', 'g'); \
                           RegReplace('illustration\\b', 'kuvitus', 'g'); \
                           RegReplace('p\\. of plates|leaves of plates', 'kuvalehteä', 'g'); \
                           RegReplace('1 v\\.', '1 nide', 'g'); \
                           RegReplace('insert\\b', 'liite', 'g'); \
                           RegReplace('inserts', 'liitteitä', 'g'); \
                           RegReplace('videodiscs', 'videolevyä', 'g'); \
                           RegReplace('videodisc', 'videolevy', 'g'); \
                           RegReplace('(sound|audio) discs', 'äänilevyä', 'g'); \
                           RegReplace('sound disc', 'äänilevy', 'g'); \
                           RegReplace('ca\\.', 'noin', 'g'); \
                           RegReplace('digital\\b', 'digitaalinen', 'g'); \
                           RegReplace('analog\\b', 'analoginen', 'g'); \
                           RegReplace('folded sheet', 'taitelehti', 'g'); \
                           RegReplace('map\\b', 'kartta', 'g'); \
                           RegReplace('1 hr\\.', '1 tunti', 'g'); \
                           RegReplace('unpaged', 'ei sivunumerointia', 'g'); \
                           RegReplace('\\bhr\\.', 'tuntia', 'g'); \
                           RegReplace('sound cassettes', 'äänikasettia', 'g'); \
                           RegReplace('maps|\\bkartt\\.|\\bKARTT\\.', 'karttoja', 'g'); \
                           RegReplace('sd\\., col\\.', 'äänellinen, värillinen', 'g'); \
                           RegReplace('\\s\\(chiefly color\\)|\\s\\(chiefly col\\.\\)', '', 'g'); \
                           RegReplace('chiefly color\\b|chiefly col\\.', 'pääosin värillisiä', 'g'); \
                           RegReplace('\\b[Ss]\\.|pages|\\bp\\.|\\bp\\b', 'sivua', 'g'); \
                           RegReplace('chiefly', 'pääosin', 'g'); \
                           RegReplace('\\bnid\\.|\\bnid[^A-Za-z]+|\\bhft[^A-Za-z]+|\\bhft\\.|\\bNID\\.|\\bnid\\.', 'nidottu', 'g'); \
                           RegReplace('\\bpbk[^A-Za-z]+|\\bpbk\\.', 'nidottu', 'g'); \
                           RegReplace('\\bhbk[^A-Za-z]+|\\bhbk\\.|\\binb[^A-Za-z]+|\\binb\\.|\\bsid\\.|\\bSID\\.', 'sidottu', 'g'); \
                           RegReplace('\\bverkkojulk\\b|\\bverkkojulk\\.|electronic bk\\.', 'verkkoaineisto', 'g'); \
                           RegReplace('kuv\\.|KUV\\.', 'kuvitettu', 'g'); \
                           RegReplace('IMPR\\b', 'impr', 'g'); \
                           RegReplace('mv\\.', 'mustavalkoinen', 'g'); \
                           RegReplace('vär\\.', 'värillinen', 'g'); \
                           RegReplace('värikuv\\.', 'värikuvitus', 'g'); \
                           RegReplace('nuott\\.', 'nuotteja', 'g'); \
                           RegReplace('kuval\\.', 'kuvalehteä', 'g'); \
                           RegReplace('\\bCM', 'cm', 'g'); \
                           RegReplace('diagrs\\.', 'diagrams', 'g'); \
                           RegReplace('incl\\.', 'includes', 'g'); \
                           RegReplace('fold(\\.)* maps', 'folded maps', 'g'); \
                           RegReplace('(\\d+) irtol\\.', '\\1 irtolehteä'); \
                           Replace('kuvas.' By 'kuvasivua'); \
                           RegReplace('([^0-9]) (taul[.,])', '\\1 taulukkoja', 'g'); \
                           RegReplace('\\btaul\\.', 'taulukkoja', 'g'); \
                           RegReplace('hakem\\.|hakem(\$|\\b)', 'hakemisto', 'g'); \
                           RegReplace('lyh\\. luett\\.', 'lyhenneluettelo', 'g'); \
                           RegReplace('lähdel\\.|lähdel(\$|\\b)', 'lähdeluettelo', 'g'); \
                           RegReplace('liitel\\.|liitel(\$|\\b)', 'liiteluettelo', 'g'); \
                           RegReplace('(\\d*) taul\\.', '\\1 taulukkoa', 'g'); \
                           RegReplace('(\\d*) karttal\\.', '\\1 karttaliitettä', 'g'); \
                           RegReplace('\\] kuvas\\.|\\] kuvas(\$|\\b)', '] kuvasivua', 'g'); \
                           RegReplace('1 liites\\.|1 liites(\$|\\b)', '1 liitesivu', 'g'); \
                           RegReplace('liites\\.|liites(\$|\\b)', 'liitesivua', 'g'); \
                           RegReplace('liitt\\.', 'liitteitä', 'g'); \
                           RegReplace('[Vv]erkkokirja', 'verkkoaineisto', 'g')


#define macro 300AE | RegReplace('\\b[Nn]\\.', 'noin', 'g'); \
                      RegReplace('(\\d+) s\\.', '\\1 sivua', 'g'); \
                      RegReplace('(\\[\\d+\\]) s\\.', '\\1 sivua', 'g'); \
                      RegReplace('(\\d+) bl\\.', '\\1 blad', 'g'); \
                      RegReplace('\\bs\\. (\\d+-\\d+)', 'sivut \\1', 'g'); \
                      RegReplace('S\\. (\\d+-\\d+)', 'sivut \\1', 'g'); \
                      RegReplace('1 vol\\.', '\\1 nide', 'g'); \
                      RegReplace('(\\d+) vol\\.', '\\1 nidettä', 'g'); \
                      RegReplace('\\bsek([^A-Z-a-z])', 's\\1', 'g'); \
                      RegReplace('ss\\.', 'sivut', 'g'); \
                      RegReplace('\\bkuv\\.', 'kuvitettu', 'g'); \
                      RegReplace('verkkojulkaisu', 'verkkoaineisto', 'g'); \
                      RegReplace('Verkkojulkaisu', 'Verkkoaineisto', 'g')
                      
#define macro 300BE | RegReplace('kartt\\.', 'karttoja', 'g'); \
                      RegReplace('kuv\\.', 'kuvitettu', 'g'); \
                      RegReplace('mv\\.', 'mustavalkoinen', 'g'); \
                      RegReplace('vär\\.', 'värillinen', 'g'); \
                      RegReplace('värikuv\\.', 'värikuvitus', 'g'); \
                      RegReplace('nuott\\.', 'nuotteja', 'g'); \
                      RegReplace('kuval\\.', 'kuvalehteä', 'g'); \
                      RegReplace('diagrs\\.', 'diagrams', 'g'); \
                      RegReplace('incl\\.', 'includes', 'g'); \
                      RegReplace('fold(\\.)* maps', 'folded maps', 'g'); \
                      RegReplace('(\\d+) irtol\\.', '\\1 irtolehteä'); \
                      Replace('kuvas.' By 'kuvasivua'); \
                      RegReplace('([^0-9]) (taul[.,])', '\\1 taulukkoja', 'g'); \
                      RegReplace('\\btaul\\.', 'taulukkoja', 'g'); \
                      RegReplace('hakem\\.|hakem(\$|\\b)', 'hakemisto', 'g'); \
                      RegReplace('lyh\\. luett\\.', 'lyhenneluettelo', 'g'); \
                      RegReplace('lähdel\\.|lähdel(\$|\\b)', 'lähdeluettelo', 'g'); \
                      RegReplace('liitel\\.|liitel(\$|\\b)', 'liiteluettelo', 'g'); \
                      RegReplace('(\\d*) taul\\.', '\\1 taulukkoa', 'g'); \
                      RegReplace('(\\d*) karttal\\.', '\\1 karttaliitettä', 'g'); \
                      RegReplace('\\] kuvas\\.|\\] kuvas(\$|\\b)', '] kuvasivua', 'g'); \
                      RegReplace('1 liites\\.|1 liites(\$|\\b)', '1 liitesivu', 'g'); \
                      RegReplace('liites\\.|liites(\$|\\b)', 'liitesivua', 'g'); \
                      RegReplace('liitt\\.', 'liitteitä', 'g'); \
                      RegReplace('[Vv]erkkokirja', 'verkkoaineisto', 'g')

// Musiikin esityskokoonpanotermien avaaminen, osakenttä $m kentissä 130, 240, 600, 610, 630, 700, 710, 730, 800, 810, 830

#define macro ESITYSKOKOONPANO | RegReplace('pianotrio', 'piano, viulu, sello'); \
                                 RegReplace('pianokvartetti', 'piano, viulu, alttoviulu, sello'); \
                                 RegReplace('pianokvintetti', 'piano, viulut (2), alttoviulu, sello'); \
                                 RegReplace('\\bork\\.|\\bork(\$|\\b)', 'orkesteri', 'g'); \
                                 RegReplace('jousiork\\.|jousiork(\$|\\b)', 'jousiorkesteri'); \
                                 RegReplace('kamariork\\.|kamariork(\$|\\b)', 'orkesteri'); \
                                 RegReplace('puhallinork\\.|puhallinork(\$|\\b)', 'puhallinorkesteri'); \
                                 RegReplace('\\bkät\\.|\\bkät(\$|\\b)', 'kätisesti'); \
                                 RegReplace('soitinääni', 'määrittämätön soitin'); \
                                 RegReplace('\\bS\\s*(\\(\\d+)', 'sopraanot \\1', 'g'); \
                                 RegReplace('\\bS\\.', 'sopraano', 'g'); \
                                 RegReplace('\\bMz\\s*(\\(\\d+)', 'mezzosopraanot \\1', 'g'); \
                                 RegReplace('\\bMz\\.', 'mezzosopraano', 'g'); \
                                 RegReplace('\\bA\\s*(\\(\\d+)', 'altot \\1', 'g'); \
                                 RegReplace('\\bA\\.', 'altto', 'g'); \
                                 RegReplace('\\bKt\\s*(\\(\\d+)', 'kontratenorit \\1', 'g'); \
                                 RegReplace('\\bKt\\.', 'kontratenori', 'g'); \
                                 RegReplace('\\bT\\s*(\\(\\d+)', 'tenorit \\1', 'g'); \
                                 RegReplace('\\bT\\.', 'tenori', 'g'); \
                                 RegReplace('\\bBar\\s*(\\(\\d+)', 'baritonit \\1', 'g'); \
                                 RegReplace('\\bBar\\.', 'baritoni', 'g'); \
                                 RegReplace('\\bB\\s*(\\(\\d+)', 'bassot \\1', 'g'); \
                                 RegReplace('\\bB\\.', 'basso', 'g'); \
                                 If (RegFind(S, 'sovitettu, jousitrio') >= 0) Or (RegFind(S, ', jousitrio') < 0) RegReplace('jousitrio', 'viulu, alttoviulu, sello'); \
                                 If (RegFind(S, 'sovitettu, jousikvartetti') >= 0) Or (RegFind(S, ', jousikvartetti') < 0) RegReplace('jousikvartetti', 'viulut (2), alttoviulu, sello'); \
                                 If (RegFind(S, 'sovitettu, jousikvintetti') >= 0) Or (RegFind(S, ', jousikvintetti') < 0) RegReplace('jousikvintetti', 'viulut (2), alttoviulut (2), sello'); \
                                 If (RegFind(S, 'sovitettu, puupuhallinkvartetti') >= 0) Or (RegFind(S, ', puupuhallinkvartetti') < 0) RegReplace('puupuhallinkvartetti', 'huilu, oboe, klarinetti, fagotti'); \
                                 If (RegFind(S, 'sovitettu, puhallinkvintetti') >= 0) Or (RegFind(S, ', puhallinkvintetti') < 0) RegReplace('puhallinkvintetti', 'huilu, oboe, klarinetti, käyrätorvi, fagotti')

#define macro TRIOT            | RegReplace('^piano, jouset', 'piano, viulu, sello'); \
                                 RegReplace('^jouset', 'viulu, alttoviulu, sello')
                                 
#define macro KVARTETOT        | RegReplace('^piano, jouset', 'piano, viulu, alttoviulu, sello');\
                                 RegReplace('^jouset', 'viulut (2), alttoviulu, sello'); \
                                 RegReplace('^puupuhaltimet', 'huilu, oboe, klarinetti, fagotti')
                              
#define macro KVINTETOT        | RegReplace('^jouset', 'viulut (2), alttoviulut (2), sello'); \
                                 RegReplace('^piano, jouset', 'piano, viulut (2), alttoviulu, sello'); \
                                 RegReplace('^puhaltimet', 'huilu, oboe, klarinetti, käyrätorvi, fagotti')

#define macro SOVITUSMERKINTO | RegReplace('sov\\.', 'sovitettu', 'g')

#define macro RAAMATTU | RegReplace('\\bUT(\\b|\\.)', 'Uusi testamentti', 'g'); \
                         RegReplace('\\bVT(\\b|\\.)', 'Vanha testamentti', 'g')


#define macro FIKTIIVINENHAHMO | RegReplace('fikt\\.', '(fiktiivinen hahmo)', 'g'); \
                                 RegReplace('fiktiivinen henkilö', '(fiktiivinen hahmo)', 'g')

#define macro FIKTIIVINENYHTEISO | RegReplace('fikt\\.', '(fiktiivinen yhteisö)')

#define macro AIKAMAAREET | RegReplace('\\bs\\.', 'syntynyt', 'g'); \
                            RegReplace('\\bk\\.', 'kuollut', 'g'); \
                            RegReplace('\\bn\\.', 'noin', 'g'); \
                            RegReplace('\\bvs\\.', 'vuosisata', 'g')

#define macro SIDOSASUT |  RegReplace('\\bsid\\.|\\bsid\\b', 'sidottu', 'g'); \
                           RegReplace('\\bnid\\.|\\bnid\\b', 'nidottu', 'g'); \
                           RegReplace('\\bvirh\\b|\\bvirh\\.', 'virheellinen', 'g'); \
                           RegReplace('\\binb\\b|\\binb\\.', 'inbunden', 'g'); \
                           RegReplace('\\bhft\\b|\\bhft\\.', 'häftad', 'g'); \
                           RegReplace('\\bpbk\\b|\\bpbk\\.', 'paperback', 'g'); \
                           RegReplace('\\bhbk\\b|\\bhbk\\.', 'hardback', 'g'); \
                           RegReplace('\\balk\\b|\\balk\\.', 'alkaline', 'g'); \
                           RegReplace('\\bbk\\b|\\bbk\\.', 'book', 'g'); \
                           RegReplace('\\bverkkojulk\\b|\\bverkkojulk\\.', 'verkkoaineisto', 'g')

#define macro VERKKOAINEISTO | RegReplace('paperimuodossa', 'painettuna', 'g'); \
                               RegReplace('[Pp]aperisena', 'painettuna', 'g'); \
                               RegReplace('Verkkokirja', '1 verkkoaineisto', 'g'); \
                               RegReplace('[Ii]nternet-julkaisu\\b', 'verkkoaineisto', 'g'); \
                               RegReplace('paperisena', 'painettuna', 'g'); \
                               RegReplace('[Ee]lektroninen aineisto', 'Verkkoaineisto', 'g'); \
                               RegReplace('erkkojulkaisu', 'erkkoaineisto'); \
                               RegReplace('Elektroninen julkaisu|Verkkojulkaisuun', 'Linkki verkkoaineistoon')

#define macro FUNKTIOVALIMERKIT | RegReplace('(\\)|[Mm]r\\.|[Mm]rs\\.|[Jj]r\\.|Ph\\.+\\s+D\\.|Dr\\.|Sr\\.|[Rr]ev\\.|\\s[A-Za-z]\\.|\\.[A-Za-z]\\.)($4|$e)', '\\1,\\2', 'g'); \
                                  RegReplace('\\.($[e|4])', ',\\1', 'g'); \
                                  RegReplace(',,', ',')
                                  

#define macro FUNKTIOT2 | RegReplace('(\\)|[Mm]r\\.|[Mm]rs\\.|[Jj]r\\.|Ph\\.+\\s+D\\.|Dr\\.|Sr\\.|[Rr]ev\\.|\\s[A-Za-z]\\.|\\.[A-Za-z]\\.)($4|$j)', '\\1,\\2', 'g'); \
                          RegReplace('\\.($[j|4])', ',\\1', 'g'); \
                          RegReplace(',,', ',')

// Lisää loppupisteen kenttään, jos se ei lopu johonkin seuraavista merkeistä: ), ], ?, !, -, .
#define macro LOPPUPISTE | If ( (RegFind('(\\)|\\]|\\?|\\!|-|\\.)\$') <0 ) ) Then S + '.' Else S

// Parsitaan muotoa "2006-09-07·11:03:23+02" oleva aikaleima standardin mukaiseksi -> "20060907110323.0"
#define macro AIKALEIMA | RegReplace('\\+', '.', 'g'); \
                          RegReplace('[^\\d|^\\.]', '', 'g'); \
                          Between(0, 16)

000/1-5     | 000/1-5     | S
000/6/      | 000/6/      | 'n'
000/7-9     | 000/7-9/    | S
000/10/     | 000/10/     | 'a'
000/11-17/  | 000/11-17/  | S
000/18/	    | 000/18/     | '4'
000/19/	    | 000/19/	  | 'i'
000/20-24/  | 000/20-24/  | S

#if (RegFind(@005, '-') >= 0)
005         | 005         | AIKALEIMA
#endif

#if (@007/1-2/ != 'tu')
007        | 007        | S; RegReplace(' ', '|')
#endif

008   | 008    | S
008/16-18/ | 008/16-18/ | Table ('008-15-maakoodit.tbl')
008/36-38/ | 008/36-38/ | Table ('008-35-kielikoodit.tbl')
008/40/ | 008/40/ | 'c'

// TEKSTIAINEISTO JA TEKSTIKÄSIKIRJOITUS

#if ((@000/7/ = 'a' Or @000/7/ = 't') And (Not Exists(@245$h)) And Not Exists(@336))
008/24/         | 008/24/         | S

008/24/         | 336(new)$a      | If (S = 'f') Then 'taktiili teksti' Else 'teksti'
008/24/         | 336(newest)$b   | If (S = 'f') Then 'tct' Else 'txt'
008/24/         | 336(newest)$2   | 'rdacontent'

008/24/         | <A37$a          | Table('008-23-337a.tbl')
A37$a           | 337(new)$a      | S
A37$a           | 337(newest)$b   | Table('337_b.tbl')
A37$a           | 337(newest)$2   | 'rdamedia'

008/24/         | <A38$a          | Table('008-23-338a.tbl')
A38$a           | 338(new)$a      | S
A38$a           | 338(newest)$b   | Table('338_b.tbl')
A38$a           | 338(newest)$2   | 'rdacarrier'
#endif

#if ((@000/7/ = 'a' Or @000/7/ = 't') And Exists(@245$h) And (Exists (@007)) And (Not Exists(@336)) And (RegFind(@245$h, '[Mm]ultimedia') <0))
007/1/          | 007/1/          | S
007/1/          | <A36            | Table ('007-336a.tbl')

A36             | 336(new)$a      | S
A36             | 336(newest)$b   | Table('336_b.tbl')
A36             | 336(newest)$2   | 'rdacontent'

007/1/          | <A37            | If (RegFind(@245$h, '[Mm]ultimedia') <0) Then Table('007-337a.tbl')

A37             | 337(new)$a      | S
A37             | 337(newest)$b   | Table('337_b.tbl')
A37             | 337(newest)$2   | 'rdamedia'
#endif

// NUOTTIJULKAISU JA NUOTTIKÄSIKIRJOITUS

#if (@000/7/ = 'c' Or @000/7/ = 'd'  And Not Exists(@336))
008/24/         | 008/24/         | S
008/24/         | 336(new)$a      | If (S != 'f') Then 'nuottikirjoitus' Else 'taktiili nuottikirjoitus'
008/24/         | 336(newest)$b   | If (S != 'f') Then 'ntm' Else 'tcm'
008/24/         | 336$2           | 'rdacontent'

008/24/         | <B37$a          | Table ('008-24-337a.tbl')
B37$a           | 337(new)$a      | S
B37$a           | 337(newest)$b   | Table ('337_b.tbl')

B37$a           | 337(newest)$2   | 'rdamedia'

008/24/         | 338(new)$a      | 'nide'
008/24/         | 338(newest)$b   | 'nc'
008/24/         | 338(newest)$2   | 'rdacarrier'
#endif

// KARTTA-AINEISTO JA KARTTAKÄSIKIRJOITUS

#if (@000/7/ = 'e' Or @000/7/ = 'f' And Not Exists(@336))
007/1-2		| 007/1-2/	  | S

007/1/          | <C36$a          | If (S = 'a' and @007/2/ != 'q' and @008/30/ = 'f') Then 'kartografinen taktiili kuva'

008/26/         | 008/26/         | S
008/26/         | <C36$a          | If ((S != 'd') And (C36$a != 'kartografinen taktiili kuva')) Then 'kartografinen kuva' Else 'kartografinen kolmiulotteinen muoto'

C36$a           | 336(new)$a      | S
C36$a           | 336(newest)$b   | Table ('336_b.tbl')
C36$a           | 336(newest)$2   | 'rdacontent'

008/30/         | 008/30/         | S

008/30/         | <C37$a          | Table ('008-29-337a.tbl')
C37$a           | 337(new)$a      | S
C37$a           | 337(newest)$b   | Table ('337_b.tbl')
C37$a           | 337(newest)$2   | 'rdamedia'
#endif


// HEIJASTETTAVA KUVA TAI VIESTIN

#if (@000/7/ = 'g') And (@007/1/ = 'g' Or @007/1/ = 'm' Or @007/1/ = 'v' Or @007/1/ = 'c') And (Not Exists(@336))
007/1/          | 007/1/          | S

007/1/          | <H36$a          | If (S = 'g') Then 'stillkuva' Else 'kaksiulotteinen liikkuva kuva'
H36$a           | 336(new)$a      | S
H36$a           | 336(newest)$b   | Table ('336_b.tbl')
H36$a           | 336(newest)$2   | 'rdacontent'

007/1/          | <H37$a          | Table ('007-0-337a-heijastettava.tbl')
H37$a           | 337(new)$a      | S
H37$a           | 337(newest)$b   | Table ('337_b.tbl')
H37$a           | 337(newest)$2   | 'rdamedia'
#endif

// PUHEÄÄNITE

#if (@000/7/ = 'i') And (Not Exists(@336))

000             | <D36$a          | 'puhe'
D36$a           | 336(new)$a      | S
D36$a           | 336(newest)$b   | Table ('336_b.tbl')
D36$a           | 336(newest)$2   | 'rdacontent'

007/1/          | 007/1/          | S
007/1/          | <D37$a          | If (S = 'c') Then 'tietokonekäyttöinen' Else 'audio'

D37$a           | 337(new)$a      | S
D37$a           | 337(newest)$b   | Table ('337_b.tbl')
D37$a           | 337(newest)$2   | 'rdamedia'
#endif

// MUSIIKKIÄÄNITE

#if (@000/7/ = 'j') And (Not Exists(@336))

000             | <E36$a          | 'esitetty musiikki'
E36$a           | 336(new)$a      | S
E36$a           | 336(newest)$b   | Table ('336_b.tbl')
E36$a           | 336(newest)$2   | 'rdacontent'

007/1/          | 007/1/          | S
007/1/          | <E37$a          | If (S = 's') Or (RegFind(@245$h, 'nite') >= 0) Then 'audio' Else 'tietokonekäyttöinen'

E37$a           | 337(new)$a      | S
E37$a           | 337(newest)$b   | Table ('337_b.tbl')
E37$a           | 337(newest)$2   | 'rdamedia'
#endif

// KUVA

#if (@000/7/ = 'k'  And Not Exists(@336))
007/1/          | 007/1/          | S

007/1/          | <G36$a          | If (S = 'k' and @008 = 'f') Then 'taktiili kuva' Else 'stillkuva'
G36$a           | 336(new)$a      | S
G36$a           | 336(newest)$b   | Table ('336_b.tbl')
G36$a           | 336(newest)$2   | 'rdacontent'

008/30/         | 008/30/         | S
008/30/         | 337(new)$a      | If (S = ' ' or S = '|' or S = 'f' or S = 'r') Then 'käytettävissä ilman laitetta'
008/30/         | 337(new)$a      | If (S = 'a' or S = 'b' or S = 'c') Then 'mikromuoto'
008/30/         | 337(new)$a      | If (S = 'o' or S = 'q' or S = 's') Then 'tietokonekäyttöinen'
#endif

// ELEKTRONINEN AINEISTO

#if (@000/7/ = 'm') And (Not Exists(@336))
008/27/         | 008/27/         | S

008/27/         | <F36$a          | Table ('008-26-336a.tbl')
F36$a           | 336(new)$a      | S
F36$a           | 336(newest)$b   | Table ('336_b.tbl')
F36$a           | 336(newest)$2   | 'rdacontent'

008/27/         | <F37$a          | 'tietokonekäyttöinen'
F37$a           | 337$a           | S
F37$a           | 337$b           | Table ('337_b.tbl')
F37$a           | 337$2           | 'rdamedia'
#endif

// MONIVIESTIN JA SEKALAINEN AINEISTO

#if (@000/7/ = 'p'  And Not Exists(@336))
000/7/          | 000/7/          | S
000/7/          | 336(new)$a      | 'muu'
000/7/          | 337(new)$a      | 'muu'
#endif

#if (RegFind(@245$h, '[Mm]ultimedia') >=0) Or (RegFind(@245$h, '[Kk]it') >=0) And Not Exists(@336)
000/7/          | 000/7/          | 'o'
000/7/          | 336(new)$a      | 'muu'
000/7/          | 337(new)$a      | 'muu'
#endif

// ESINE

#if (@000/7/ = 'r') And (Not Exists(@336))
008/34/         | 008/34/         | S
008/34/         | <G36$a          | 'kolmiulotteinen muoto'

G36$a           | 336(new)$a      | S
G36$a           | 336(newest)$b   | Table ('336_b.tbl')
G36$a           | 336(newest)$2   | 'rdacontent'

008/34/         | <G37$a          | If (S = 'p') Then 'mikroskooppinen' Else 'käytettävissä ilman laitetta'
G37$a           | 337(new)$a      | S
G37$a           | 337(newest)$b   | Table ('337_b.tbl')
G37$a           | 337(newest)$2   | 'rdamedia'
#endif

010I1 | <DELI1 | S
010I2 | <DELI2 | S
010   | <DEL   | S

012I1 | <DELI1 | S
012I2 | <DELI2 | S 
012   | <DEL   | S

014I1 | <DELI1 | S
014I2 | <DELI2 | S
014   | <DEL   | S

015I1 | <DELI1 | S
015I2 | <DELI2 | S
015   | <DEL   | S

016I1 | <DELI1 | S
016I2 | <DELI2 | S
016   | <DEL   | S

019I1 | <DELI1 | S
019I2 | <DELI2 | S
019   | <DEL   | S

020I1 | 020I1  | S
020I2 | 020I2  | S
020$a | 020$a  | S; RegReplace('[\\s](.*)', ''); KAANNOKSET
020$a | 020$q  | If (RegFind(@020$a, '\\(') >= 0) Then S; RegReplace('(.*)\\(', ''); RegReplace('\\)', ''); KAANNOKSET
020$c | <DEL   | S
020$q | 020$q  | S; RegReplace('\\(', ''); RegReplace('\\)', ''); KAANNOKSET
020$z | 020$z  | S; RegReplace('[\\s](.*)', ''); KAANNOKSET
020$z | 020$q  | If (RegFind(@020$z, '\\(') >= 0) Then S; RegReplace('(.*)\\(', ''); RegReplace('\\)', ''); KAANNOKSET

022I1           | 022I1           | If (I1=0 Or I1=1) Then S Else ' '
022I2           | 022I2           | ' '
022             | 022             | S

024I1           | 024I1           | '0'
024I2           | 024I2           | ' '
024             | 024             | S

025I1 | <DELI1 | S
025I2 | <DELI2 | S
025   | <DEL   | S

028I1 | 028I1  | S
028I2 | 028I2  | S
028   | 028    | S
028   | 028    | Sort('baq56789')

029I1 | <DELI1 | S
029I2 | <DELI2 | S
029   | <DEL   | S

032I1 | <DELI1 | S
032I2 | <DELI2 | S
032   | <DEL   | S

035I1 | 035I1  | ' '
035I2 | 035I2  | ' '
035$a | 035$a  | S

036I1 | <DELI1 | S
036I2 | <DELI2 | S
036   | <DEL   | S

037I1 | <DELI1 | S
037I2 | <DELI2 | S
037   | <DEL   | S

038I1 | <DELI1 | S
038I2 | <DELI2 | S
038   | <DEL   | S

040I1 | 040I1  | ' '
040I2 | 040I2  | ' '
040$c | 040$a  | S
040$b | 040$b  | 'mul'

#if (Not Exists(@040$b))
000   | 040$b  | 'mul'
#endif

040   | 040    | Sort('abed')

#if ( (@008/36-38/ != '   ') And (@008/36-38/ != '|||') And Not (Exists(@041)) )
008        | 041I1  | '0'
008        | 041I2  | ' '
008/36-38/ | 041$a  | If (InTable('008-35-kielikoodit.tbl') Then Table ('008-35-kielikoodit.tbl')
#endif

100I1 | 100I1  | S
100I2 | 100I2  | S
100$a | <A10$a | S; If ((100$c Follows 100$a) And RegFind(@100$c, 'fikt') >= 0) Delete (',', At Ending)
100$b | <A10$b | S; If ((100$c Follows 100$b) And RegFind(@100$c, 'fikt') >= 0) Delete (',', At Ending)
100$c | <A10$c | FIKTIIVINENHAHMO
100$d | <A10$d | AIKAMAAREET
100$e | <A10$e | Table ('Funktiotermit.tbl'); Delete('.', At Ending); If (NextSub($e) = '') Then S + '.' Else S + ','
100$4 | <A10$e | If (Not (Exists(@100$e)) And InTable(S, 'Funktiokoodit.tbl')) Then Table ('Funktiokoodit.tbl') + '.' Else S
100$? | <A10$? | S

A10   | 100    | FUNKTIOVALIMERKIT

110I1 | 110I1  | S
110I2 | 110I2  | S
110$c | <B11$c | FIKTIIVINENYHTEISO; AIKAMAAREET
110$e | <B11$e | Table ('Funktiotermit.tbl'); LOPPUPISTE
110$4 | <B11$e | If (Not (Exists(@110$e)) And InTable(S, 'Funktiokoodit.tbl')) Then Table ('Funktiokoodit.tbl') + '.' Else S
110$? | <B11$? | S

B11   | 110    | FUNKTIOVALIMERKIT

111I1 | 111I1  | S
111I2 | 111I2  | S
111$j | <C11$j | Table ('Funktiotermit.tbl')
111$4 | <C11$j | Table ('Funktiokoodit.tbl') + '.'
111$? | <C11$? | S

C11   | 111    | FUNKTIOT2

130I1 | 130I1  | S
130I2 | 130I2  | S

#if (RegFind(@130$a, 'Triot') >= 0)
130$m | <A30$m | TRIOT; ESITYSKOKOONPANO
#endif

#if (RegFind(@130$a, 'Kvartetot') >= 0)
130$m | <A30$m | KVARTETOT; ESITYSKOKOONPANO
#endif

#if (RegFind(@130$a, 'Kvintetot') >= 0)
130$m | <A30$m | KVINTETOT; ESITYSKOKOONPANO
#endif

#if (RegFind(@130$a, 'Triot') < 0) And (RegFind(@130$a, 'Kvartetot') < 0) And (RegFind(@130$a, 'Kvintetot') < 0)
130$m | <A30$m | ESITYSKOKOONPANO
#endif

130$o | <A30$o | SOVITUSMERKINTO; ESITYSKOKOONPANO
130$p | <A30$p | RAAMATTU
130$? | <A30$? | S

A30 | 130 | LOPPUPISTE

222I1 | 222I1 | S
222I2 | 222I2 | S
222   | 222   | VERKKOAINEISTO

240I1 | 240I1  | S
240I2 | 240I2  | S

#if (RegFind(@240$t, 'Triot') >= 0) Or (RegFind(@240$a, 'Triot') >= 0)
240$m | <F40$m | TRIOT; ESITYSKOKOONPANO
#endif

#if (RegFind(@240$t, 'Kvartetot') >= 0) Or (RegFind(@240$a, 'Kvartetot') >= 0)
240$m | <F40$m | KVARTETOT; ESITYSKOKOONPANO
#endif

#if (RegFind(@240$t, 'Kvintetot') >= 0) Or (RegFind(@240$a, 'Kvintetot') >= 0)
240$m | <F40$m | KVINTETOT; ESITYSKOKOONPANO
#endif

// Jos aiemmat säännöt eivät tärpänneet eli väliaikaista kenttää F40$m ei ole luotu
#if Not Exists(F40$m)
240$m | <F40$m | ESITYSKOKOONPANO
#endif
                 
240$o | <F40$o | SOVITUSMERKINTO; ESITYSKOKOONPANO
240$p | <F40$p | RAAMATTU
240$? | <F40$? | S

F40   | 240    | S

243I1 | 243I1  | S
243I2 | 243I2  | S

#if (RegFind(@243$a, 'Triot') >= 0)
243$m | <B43$m | TRIOT; ESITYSKOKOONPANO
#endif

#if (RegFind(@243$a, 'Kvartetot') >= 0)
243$m | <B43$m | KVARTETOT; ESITYSKOKOONPANO
#endif

#if (RegFind(@243$a, 'Kvintetot') >= 0)
243$m | <B43$m | KVINTETOT; ESITYSKOKOONPANO
#endif

#if (RegFind(@243$a, 'Triot') < 0) And (RegFind(@243$a, 'Kvartetot') < 0) And (RegFind(@243$a, 'Kvintetot') < 0)
243$m | <B43$m | ESITYSKOKOONPANO
#endif

243$o | <B43$o | SOVITUSMERKINTO; ESITYSKOKOONPANO
243$? | <B43$? | S

B43 | 243 | S

#if (Not Exists(%100)) And (Not Exists(%110)) And (Not Exists(%111)) And (Not Exists(%130))
245I1 | 245I1  | '0'
#endif

#if Not (Exists(%245I1))
245I1 | 245I1  | S
#endif

245I2 | 245I2  | S

245$a | <F45$a | S
245$b | <F45$b | S
245$c | <F45$c | S; RegReplace('\\bet al\\.*', 'ja muita', 'g')
245$f | <F45$f | S
245$g | <F45$g | S
245$p | <F45$p | S
245$6 | <F45$6 | S
245$8 | <F45$8 | S
245$k | <F45$k | S
245$n | <F45$n | S

F45 | 245 | S

249I1 | <DELI1 | S
249I2 | <DELI2 | S
249   | <DEL   | S

250I1 | 250I1 | S
250I2 | 250I2 | S
250   | 250   | KAANNOKSET

#if (Not Exists(@773))
260I1 | 260I1 | S
260I2 | 260I2 | S
260$a | 260$a | S; RegReplace('S\\.\\s*[Ll]\\.', 'Kustannuspaikka tuntematon');
                   RegReplace('[Ss]\\.\\s*[Ll]\\.', 'kustannuspaikka tuntematon');
                   RegReplace('[Ss]\\.\\s*[Nn]\\.', 'kustantaja tuntematon')
260$b | 260$b | S; RegReplace('[Ss]\\.\\s*[Nn]\\.', 'kustantaja tuntematon')
260$c | 260$c | S; RegReplace('[Ss]\\.\\s*[Aa]\\.*', 'julkaisuaika tuntematon')
260$? | 260$? | S
#endif

#if (Exists(@773))
260I1 | 260I1 | S
260I2 | 260I2 | S
260   | 260   | S
#endif

261I1 | <DELI1 | S
261I2 | <DELI2 | S
261   | <DEL   | S

262I1 | <DELI1 | S
262I2 | <DELI2 | S
262   | <DEL   | S

300I1 | 300I1  | S
300I2 | 300I2  | S
300   | 300    | KAANNOKSET; Delete('.', At Ending)

// OLEMASSA OLEVIEN 336- JA 337-KENTTIEN KÄÄNTÄMINEN, $b- JA $2-OSAKENTTIEN LUOMINEN

336I1 | 336I1 | S
336I2 | 336I2 | S

// Toistuvat 336$a-osakentät pilkotaan erillisiin 336-kenttiin. Mahdollinen $8 kopioidaan $a-osakentän mukaan. 
336   | <T36 | S
T36(ns)$a | 336(n)$a | Delete('.', At Ending); \
                       Delete(',', At Ending); \
                       Table ('336_a.tbl')
#if (Exists(T36$8))
T36(ns)$a | 336(n)$8 | T36$8
#endif

T36   | <DEL  | S

#if Not (Exists(@336$b))
336(ns)$a | 336(no)$b | Delete('.', At Ending); Delete(';', At Ending); If (InTable(S, '336_b.tbl')) Then Table ('336_b.tbl')
336$a | 336(no)$2 | 'rdacontent'
#endif

#if (Exists(@336$b))
336$b | 336$b | S
336$a | 336(no)$2 | 'rdacontent'
#endif

336(ns)$a | 336(n) | Sort('8ab2')

337I1 | 337I1 | S
337I2 | 337I2 | S
337$a | 337$a | Table ('337_a.tbl')

#if Not (Exists(@337$b))
337$a | 337$b | If (InTable(S, '337_b.tbl')) Then Table ('337_b.tbl')
337$a | 337$2 | 'rdamedia'
#endif

#if (Exists(@337$b))
337$b | 337$b | S
337$2 | 337$2 | S
#endif

337$8 | 337$8 | S

// LUODAAN 338-KENTÄT, JOS NIITÄ EI OLE TIETUEESSA VALMIINA

// 338-kenttiä voi olla useampia esim. moniviestimissä. Samanmuotoiset kentät luovat säännöt on ryhmitelty peräkkäin.
// Kahta samansisältöistä kenttää ei luoda missään tilanteessa.

// NIDE

#if (Not Exists(@338)) \
  And (Not Exists(@773)) \
  And ( ( @000/7/ = 'a' Or @000/7/ = 'c' Or @000/7/ = 'e' Or @000/7/ = 't') And \
          ( \
            ( (RegFind(@336(1)$a, 'eksti') >= 0) Or \
              (RegFind(@336(2)$a, 'eksti') >= 0) Or \
              (RegFind(@336(3)$a, 'eksti') >= 0) Or \
              (RegFind(@336(4)$a, 'eksti') >= 0) Or \
              (RegFind(@336$a, 'notatoitu') >= 0 ) ) And \
            ( (RegFind(@337(1)$a, 'laitetta') >= 0) Or \
              (RegFind(@337(2)$a, 'laitetta') >= 0) Or \
              (RegFind(@337(3)$a, 'laitetta') >= 0) Or \
              (RegFind(@337(4)$a, 'laitetta') >= 0) ) \
          ) \
        Or (RegFind(@300$a, '[Tt]ekstivihko|\\b[Kk]irja|[Kk]artasto') >= 0) \
        Or (RegFind(%336$a, 'Kartografinen') >=0) )
000 | 338(new)I1 | ' '
000 | 338(newest)I2 | ' '
000 | 338(newest)$a | 'nide'
000 | 338(newest)$b | 'nc'
000 | 338(newest)$2 | 'rdacarrier'
#endif

// VIDEOKASETTI

#if (Not Exists(@338)) And If (RegFind(@300$a, '[Vv]ideokas') >= 0) And If (Not Exists(@773))
000 | 338(new)I1 | ' '
000 | 338(newest)I2 | ' '
000 | 338(newest)$a | 'videokasetti'
000 | 338(newest)$b | 'vf'
000 | 338(newest)$2 | 'rdacarrier'
#endif

// PIIRTOHEITINKALVO

#if (Not Exists(@338)) And If (RegFind(@300$a, '[Hh]eijastuskuva|[Kk]alvo') >= 0) And If (Not Exists(@773))
000 | 338(new)I1 | ' '
000 | 338(newest)I2 | ' '
000 | 338(newest)$a | 'piirtoheitinkalvo'
000 | 338(newest)$b | 'gt'
000 | 338(newest)$2 | 'rdacarrier'
#endif

// DIA

#if (Not Exists(@338)) \
     And If ( (RegFind(@300$a, '[Kk]uultokuv|[Dd]iaa') >= 0) Or (RegFind(@245$h, '[Dd]ia') >= 0) ) \
     And If (Not Exists(@773))
000 | 338(new)I1 | ' '
000 | 338(newest)I2 | ' '
000 | 338(newest)$a | 'dia'
000 | 338(newest)$b | 'gs'
000 | 338(newest)$2 | 'rdacarrier'
#endif

// MIKROKORTTI

#if (Not Exists(@338)) \
    And ( \
      (RegFind(@300$a, '[Mm]ikrokortti') >= 0) Or (RegFind(@500$a, 'filmikortt') >= 0) \
        Or (007/1-2/ = 'hg') Or (007/1-2/ = 'he') \
        Or (008/24/ = 'b') \
        Or (008/24/ = 'c') \
        ) \
    And (Not (000/7/ = 'e') Or (000/7/ = 'f')) \
    And (Not Exists(@773))
000 | 338(new)I1 | ' '
000 | 338(newest)I2 | ' '
000 | 338(newest)$a | 'mikrokortti'
000 | 338(newest)$b | 'he'
000 | 338(newest)$2 | 'rdacarrier'
#endif

// KORTTI

#if (Not Exists(@338)) And If (RegFind(@300$a, '\\b[Kk]ortti') >= 0) And If (Not Exists(@773))
000 | 338(new)I1 | ' '
000 | 338(newest)I2 | ' '
000 | 338(newest)$a | 'kortti'
000 | 338(newest)$b | 'no'
000 | 338(newest)$2 | 'rdacarrier'
#endif

// ARKKI

#if (Not Exists(@338)) \
  And (Not Exists(@773)) \
  And ( (RegFind(@300$a, '[Aa]rkki|1 kartta') >= 0) Or \
        ( (RegFind(@336$a, 'kartograf') >= 0) And (RegFind(@337$a, 'laitetta') >= 0) ) )
000 | 338(new)I1 | ' '
000 | 338(newest)I2 | ' '
000 | 338(newest)$a | 'arkki'
000 | 338(newest)$b | 'nb'
000 | 338(newest)$2 | 'rdacarrier'
#endif

// MIKROFILMIRULLA

#if (Not Exists(@338)) \
  And ( (RegFind(@300$a, '[Mm]ikrofilmi') >= 0) Or (007/1-2/ = 'hj') Or (008/24/ = 'a')) \
  And (Not (000/7/ = 'e') Or (000/7/ = 'f')) \
  And (Not Exists(@773))
000 | 338(new)I1 | ' '
000 | 338(newest)I2 | ' '
000 | 338(newest)$a | 'mikrofilmirulla'
000 | 338(newest)$b | 'hj'
000 | 338(newest)$2 | 'rdacarrier'
#endif

// ÄÄNIKELA

#if (Not Exists(@338)) And If (RegFind(@300$a, '[Ää]änikela') >= 0) And If (Not Exists(@773))
000 | 338(new)I1 | ' '
000 | 338(newest)I2 | ' '
000 | 338(newest)$a | 'äänikela'
000 | 338(newest)$b | 'st'
000 | 338(newest)$2 | 'rdacarrier'
#endif

// MUU

#if (Not Exists(@338)) And (Not Exists(@773)) \
  And ( \
    (RegFind(@300, '[Tt]aulu\\b|[Uu][Ss][Bb]-muisti|[Oo]ptinen levy|[Ll]evyke|[Dd]isketti|[Oo]petuskuva') >= 0) \
    Or ( (RegFind(@337$a, 'useita v') >= 0) And (RegFind(@336$a, 'useita') >= 0) ) \
   )
000 | 338(new)I1 | ' '
000 | 338(newest)I2 | ' '
000 | 338(newest)$a | 'muu'
000 | 338(newest)$b | 'nz'
000 | 338(newest)$2 | 'rdacarrier'
#endif

// VERKKOAINEISTO

#if (Not Exists(@338)) \
  And (RegFind(@300$a, 'ROM') < 0) \
  And ( \
    (RegFind(@300$a, '[Vv]erkkojulkaisu|[Tt]iedosto') >= 0) \
    Or (RegFind(@516$a, '[Vv]erkkoaineisto') >= 0) \
    Or (RegFind(@500, '[Ii]nternet-julkaisu') >= 0) \
    Or (RegFind(@538$a, '[Ii]nternet|[Ww][Ww][Ww]|selain|[Aa]dobe|[Vv]iewer') >= 0) \
    Or (RegFind(@256$a, '[Vv]erkkoaineisto') >= 0) \
    Or (RegFind(@245$h, 'electronic') >= 0) \
    Or ( (RegFind(@300, '[Ii][Bb]ooks|[Ff][Ll][Aa][Cc]|[Hh][Tt][Mm][Ll]|online') >= 0) And (@008/24/ = 'o') ) \
    Or (RegFind(@256, '[Vv]erkko|[Ss]uorakäyttöjärjestelmä') >= 0) \
    Or (RegFind(@020, '[Pp][Dd][Ff]') >= 0) \
    Or (RegFind(@336, 'eksti') >= 0) \
  )
000 | 338(new)I1 | ' '
000 | 338(newest)I2 | ' '
000 | 338(newest)$a | 'verkkoaineisto'
000 | 338(newest)$b | 'cr'
000 | 338(newest)$2 | 'rdacarrier'
#endif

// ÄÄNILEVY

#if (Not Exists(@338)) \
  And ( (RegFind(@300, '[Cc][Dd]-levy|(CD)(.*)nilevy|sound disc|audio disc|CD audio|compact disc') >= 0) ) \
  And (Not Exists(@773))
000 | 338(new)I1 | ' '
000 | 338(newest)I2 | ' '
000 | 338(newest)$a | 'äänilevy'
000 | 338(newest)$b | 'sd'
000 | 338(newest)$2 | 'rdacarrier'
#endif

// ÄÄNIKASETTI

#if (Not Exists(@338)) \
  And If ( \
  (RegFind(@300$a, '[Cc]-kas') >= 0) \
  Or (RegFind(@300$a, '[Dd][Aa][Tt]-kase|[Dd][Cc][Cc]-kas|nikas|kasettia') >= 0) \
  Or (RegFind(@300$e, '[Dd][Aa][Tt]-kase|[Dd][Cc][Cc]-kas|nikas|kasettia') >= 0) \
  ) \
  And If (Not Exists(@773))
000 | 338(new)I1 | ' '
000 | 338(newest)I2 | ' '
000 | 338(newest)$a | 'äänikasetti'
000 | 338(newest)$b | 'ss'
000 | 338(newest)$2 | 'rdacarrier'
#endif

// TIETOLEVY

#if (RegFind(@300$a,  '[Rr][Oo][Mm]|[Bb]lu-') >= 0) \
  And (Not Exists(@773)) \
  And (Not Exists(@338)) \
  And (InTable(@336$a, '336_a.tbl'))
000 | 338(new)I1 | ' '
000 | 338(newest)I2 | ' '
000 | 338(newest)$a | 'tietolevy'
000 | 338(newest)$b | 'cd'
000 | 338(newest)$2 | 'rdacarrier'
#endif

// VIDEOLEVY

#if (Not Exists(@338)) And If (RegFind(@300$a, '[Dd][Vv][Dd]-levy|[Vv]ideolevy|ideodisc') >= 0) And If (Not Exists(@773))
000 | 338(new)I1 | ' '
000 | 338(newest)I2 | ' '
000 | 338(newest)$a | 'videolevy'
000 | 338(newest)$b | 'vd'
000 | 338(newest)$2 | 'rdacarrier'
#endif

// 338-KENTTIEN LUOMINEN LOPPUU

#if (Exists(@338))
338I1 | 338I1 | S
338I2 | 338I2 | S
338$a | 338$a | Table ('338_a.tbl')
338$a | 338$b | If (InTable(S, '338_b.tbl')) Then Table ('338_b.tbl')
338$b | 338$b | If (Not Exists(%338$b)) Then S
338$2 | 338$2 | 'rdacarrier'
#endif

490I1 | 490I1 | S
490I2 | 490I2 | S
490   | 490   | S; RegReplace('\\b;$v| ; $v', ' ;$v')

500I1 | 500I1 | S
500I2 | 500I2 | S
500   | 500   | S; RegReplace('et al\\.', 'ja muita'); VERKKOAINEISTO

502I1 | 502I1 | S
502I2 | 502I2 | S
502   | 502   | S; RegReplace('Diss\\.', 'Väitöskirja'); \
                   RegReplace('Väitösk\\.', 'Väitöskirja'); \
                   RegReplace('Akad\\. avh.', 'Akademisk avhandling')

510I1 | 510I1 | S
510I2 | 510I2 | S
510   | 510   | S; RegReplace('et al\\.', 'ja muita')

511I1 | 511I1 | S
511I2 | 511I2 | S
511$g | 511$g | If (RegFind(S, '\\d*-\\d*') >= 0) Then \
                RegReplace('[^s]?s\\.|ss\\.', 'sivut', 'g') Else S
511$? | 511$? | S

516I1 | 516I1 | S
516I1 | 516I2 | S
516   | 516   | S

530I1 | 530I1 | S
530I2 | 530I2 | S
530   | 530   | S; VERKKOAINEISTO

538I1 | 538I1 | S
538I1 | 538I2 | S
538   | 538   | S

600I1 | 600I1  | S
600I2 | 600I2  | S
600$c | <C60$c | FIKTIIVINENHAHMO
600$d | <C60$d | AIKAMAAREET
600$e | <C60$e | Table ('Funktiotermit.tbl')

#if (RegFind(@600$t, 'Triot') >= 0)
600$m | <C60$m | TRIOT; ESITYSKOKOONPANO
#endif

#if (RegFind(@600$t, 'Kvartetot') >= 0)
600$m | <C60$m | KVARTETOT; ESITYSKOKOONPANO
#endif

#if (RegFind(@600$t, 'Kvintetot') >= 0)
600$m | <C60$m | KVINTETOT; ESITYSKOKOONPANO
#endif

#if (RegFind(@600$t, 'Triot') < 0) And (RegFind(@600$t, 'Kvartetot') <0) And (RegFind(@600$t, 'Kvintetot') < 0)
600$m | <C60$m | S
#endif

600$o | <C60$o | SOVITUSMERKINTO; ESITYSKOKOONPANO
600$p | <C60$p | RAAMATTU
600$4 | <C60$e | If (Not (Exists(@600$e)) And InTable(S, 'Funktiokoodit.tbl')) Then Table ('Funktiokoodit.tbl') + '.' Else S
600$? | <C60$? | S

// LCSH:n loppupisteen asettaminen
C60 | 600 | FUNKTIOVALIMERKIT; If (@600I2 = '0') And (RegFind('[^A-Za-z]\$') < 0) Then S + '.' Else S

610I1 | 610I1  | S
610I2 | 610I2  | S
610$c | <D61$c | FIKTIIVINENYHTEISO
610$e | <D61$e | Table ('Funktiotermit.tbl')

#if (RegFind(@610$t, 'Triot') >= 0)
610$m | <D61$m | TRIOT; ESITYSKOKOONPANO
#endif

#if (RegFind(@610$t, 'Kvartetot') >= 0)
610$m | <D61$m | KVARTETOT; ESITYSKOKOONPANO
#endif

#if (RegFind(@610$t, 'Kvintetot') >= 0)
610$m | <D61$m | KVINTETOT; ESITYSKOKOONPANO
#endif

#if (RegFind(@610$t, 'Triot') < 0) And (RegFind(@610$t, 'Kvartetot') < 0) And (RegFind(@610$t, 'Kvintetot') < 0)
610$m | <D61$m | S
#endif

610$o | <D61$o | SOVITUSMERKINTO; ESITYSKOKOONPANO
610$p | <D61$p | RAAMATTU
610$4 | <C61$e | If (Not (Exists(@610$e)) And InTable(S, 'Funktiokoodit.tbl')) Then Table ('Funktiokoodit.tbl') + '.' Else S
610$? | <D61$? | S

D61 | 610 | FUNKTIOVALIMERKIT; If (@610I2 = '0') And (RegFind('[^A-Za-z]\$') < 0) Then S + '.' Else S

611I1 | 611I1  | S
611I2 | 611I2  | S
611$j | <K61$j | Table ('Funktiotermit.tbl')
611$4 | <K61$j | If (Not (Exists(@611$j)) And InTable(S, 'Funktiokoodit.tbl')) Then Table ('Funktiokoodit.tbl') + '.' Else S
611$? | <K61$? | If (@611I2 = '0') And (RegFind('[^A-Za-z]\$') < 0) Then S + '.' Else S

K61   | 611     | FUNKTIOT2

630I1 | 630I1  | S
630I2 | 630I2  | S

#if (RegFind(@630$a, 'Triot') >= 0)
630$m | <E63$m | TRIOT; ESITYSKOKOONPANO
#endif

#if (RegFind(@630$a, 'Kvartetot') >= 0)
630$m | <E63$m | KVARTETOT; ESITYSKOKOONPANO
#endif

#if (RegFind(@630$a, 'Kvintetot') >= 0)
630$m | <E63$m | KVINTETOT; ESITYSKOKOONPANO
#endif

#if (RegFind(@630$a, 'Triot') < 0) And (RegFind(@630$a, 'Kvartetot') < 0) And (RegFind(@630$a, 'Kvintetot') < 0)
630$m | <E63$m | S
#endif

630$o | <E63$o | SOVITUSMERKINTO; ESITYSKOKOONPANO
630$p | <E63$p | RAAMATTU
630$4 | <E63$e | If (Not (Exists(@630$e)) And InTable(S, 'Funktiokoodit.tbl')) Then Table ('Funktiokoodit.tbl') + '.' Else S
630$? | <E63$? | S

E63 | 630 | FUNKTIOVALIMERKIT; LOPPUPISTE

650I1 | 650I1  | S
650I2 | 650I2  | S
650$4 | <O65$e | If (Not (Exists(@650$e)) And InTable(S, 'Funktiokoodit.tbl')) Then Table ('Funktiokoodit.tbl') + '.' Else S
650$? | <O65$? | If (@650I2 = '0') And (RegFind('[^A-Za-z]\$') < 0) Then S + '.' Else S

O65   | 650    | FUNKTIOVALIMERKIT

651I1 | 651I1  | S
651I2 | 651I2  | S
651$4 | <U65$e | If (Not (Exists(@651$e)) And InTable(S, 'Funktiokoodit.tbl')) Then Table ('Funktiokoodit.tbl') + '.' Else S
651$? | <U65$? | If (@651I2 = '0') And (RegFind('[^A-Za-z]\$') < 0) Then S + '.' Else S

U65   | 651    | FUNKTIOVALIMERKIT

654I1 | 654I1  | S
654I2 | 654I2  | S
654$4 | <R54$e | If (Not (Exists(@654$e)) And InTable(S, 'Funktiokoodit.tbl')) Then Table ('Funktiokoodit.tbl') + '.' Else S
654$? | <R54$? | S

R54   | 654    | FUNKTIOVALIMERKIT

655I1 | 655I1  | S
655I2 | 655I2  | S
655$4 | <T55$e | If (Not (Exists(@655$e)) And InTable(S, 'Funktiokoodit.tbl')) Then Table ('Funktiokoodit.tbl') + '.' Else S
655   | <T55   | If (@655I2 = '0') And (RegFind('[^A-Za-z]\$') < 0) Then S + '.' Else S

T55   | 655    | FUNKTIOVALIMERKIT

662I1 | 662I1  | S
662I2 | 662I2  | S
662$4 | <Z62$e | If (Not (Exists(@662$e)) And InTable(S, 'Funktiokoodit.tbl')) Then Table ('Funktiokoodit.tbl') + '.' Else S
662$? | <Z62$? | S

Z65   | 662    | FUNKTIOVALIMERKIT

700I1 | 700I1  | S
700I2 | 700I2  | S
700$c | <G70$c | FIKTIIVINENHAHMO
700$d | <G70$d | AIKAMAAREET
700$e | <G70$e | Table ('Funktiotermit.tbl'); Delete ('.', At Ending); S + '.'

#if (RegFind(@700$t, 'Triot') >= 0)
700$m | <G70$m | TRIOT; ESITYSKOKOONPANO
#endif

#if (RegFind(@700$t, 'Kvartetot') >= 0)
700$m | <G70$m | KVARTETOT; ESITYSKOKOONPANO
#endif

#if (RegFind(@700$t, 'Kvintetot') >= 0)
700$m | <G70$m | KVINTETOT; ESITYSKOKOONPANO
#endif

#if (RegFind(@700$t, 'Triot') < 0) And (RegFind(@700$t, 'Kvartetot') < 0) And (RegFind(@700$t, 'Kvintetot') < 0)
700$m | <G70$m | ESITYSKOKOONPANO
#endif

700$o | <G70$o | SOVITUSMERKINTO; ESITYSKOKOONPANO
700$p | <G70$p | RAAMATTU
700$4 | <G70$e | If InTable(S, 'Funktiokoodit.tbl') Then Table ('Funktiokoodit.tbl') + '.'
700$4 | <G70$4 | If (Not InTable(S, 'Funktiokoodit.tbl')) Then S 
700$? | <G70$? | S

G70 | 700 | FUNKTIOVALIMERKIT

710I1 | 710I1  | S
710I2 | 710I2  | S
710$c | <H71$c | FIKTIIVINENYHTEISO
710$e | <H71$e | Table ('Funktiotermit.tbl')

#if (RegFind(@710$t, 'Triot') >= 0)
710$m | <H71$m | TRIOT; ESITYSKOKOONPANO
#endif

#if (RegFind(@710$t, 'Kvartetot') >= 0)
710$m | <H71$m | KVARTETOT; ESITYSKOKOONPANO
#endif

#if (RegFind(@710$t, 'Kvintetot') >= 0)
710$m | <H71$m | KVINTETOT; ESITYSKOKOONPANO
#endif

#if (RegFind(@710$t, 'Triot') < 0) And (RegFind(@710$t, 'Kvartetot') < 0) And (RegFind(@710$t, 'Kvintetot') < 0)
710$m | <H71$m | S
#endif

710$o | <H71$o | SOVITUSMERKINTO, ESITYSKOKOONPANO
710$p | <H71$p | RAAMATTU
710$4 | <H71$e | If InTable(S, 'Funktiokoodit.tbl') Then Table ('Funktiokoodit.tbl') + '.' Else S
710$? | <H71$? | S

H71 | 710 | FUNKTIOVALIMERKIT

711I1 | 711I1  | S
711I2 | 711I2  | S
711$j | <U71$j | Table ('Funktiotermit.tbl')
711$4 | <U71$j | If (Not (Exists(%711$e)) And InTable(S, 'Funktiokoodit.tbl')) Then Table ('Funktiokoodit.tbl') + '.' Else S
711$? | <U71$? | S

U71   | 711    | FUNKTIOT2

720I1 | 720I1  | S
720I2 | 720I2  | S
720$e | <Y72$e | Table ('Funktiotermit.tbl')
720$4 | <Y72$e | If (Not (Exists(%720$e)) And InTable(S, 'Funktiokoodit.tbl')) Then Table ('Funktiokoodit.tbl') + '.' Else S
720$? | <Y72$? | FUNKTIOVALIMERKIT 

Y72   | 720    | S

730I1 | 730I1  | S
730I2 | 730I2  | S

#if (RegFind(@730$a, 'Triot') >= 0)
730$m | <J73$m | TRIOT; ESITYSKOKOONPANO
#endif

#if (RegFind(@730$a, 'Kvartetot') >= 0)
730$m | <J73$m | KVARTETOT; ESITYSKOKOONPANO
#endif

#if (RegFind(@730$a, 'Kvintetot') >= 0)
730$m | <J73$m | KVINTETOT; ESITYSKOKOONPANO
#endif

#if (RegFind(@730$a, 'Triot') < 0) And (RegFind(@730$a, 'Kvartetot') < 0) And (RegFind(@730$a, 'Kvintetot') < 0)
730$m | <J73$m | ESITYSKOKOONPANO
#endif

730$o | <J73$o | SOVITUSMERKINTO; ESITYSKOKOONPANO
730$p | <J73$p | RAAMATTU
730$? | <J73$? | S

J73 | 730 | LOPPUPISTE

76?I1 | 76?I1 | S
76?I2 | 76?I2 | S
76?$c | 76?$c | S; VERKKOAINEISTO
76?$i | 76?$i | S; VERKKOAINEISTO
76?   | 76?   | S

77?I1 | 77?I1 | S
77?I2 | 77?I2 | S
77?$c | 77?$c | S; VERKKOAINEISTO
77?$i | 77?$i | S; VERKKOAINEISTO; SIDOSASUT
77?   | 77?   | S

78?I1 | 78?I1 | S
78?I2 | 78?I2 | S
78?$c | 78?$c | S; VERKKOAINEISTO
78?$i | 78?$i | S; VERKKOAINEISTO
78?   | 78?   | S

800I1 | 800I1  | S
800I2 | 800I2  | S
800$c | <K80$c | FIKTIIVINENHAHMO
800$d | <K80$d | AIKAMAAREET

#if (RegFind(@800$t, 'Triot') >= 0)
800$m | <K80$m | TRIOT; ESITYSKOKOONPANO
#endif

#if (RegFind(@800$t, 'Kvartetot') >= 0)
800$m | <K80$m | KVARTETOT; ESITYSKOKOONPANO
#endif

#if (RegFind(@800$t, 'Kvintetot') >= 0)
800$m | <K80$m | KVINTETOT; ESITYSKOKOONPANO
#endif

#if ((RegFind(@800$t, 'Triot') < 0) And (RegFind(@800$t, 'Kvartetot') < 0) And (RegFind(@800$t, 'Kvintetot') < 0))
800$m | <K80$m | ESITYSKOKOONPANO
#endif

800$o | <K80$o | SOVITUSMERKINTO; ESITYSKOKOONPANO
800$p | <K80$p | RAAMATTU
800$4 | <K80$e | If (Not (Exists(@800$e)) And InTable(S, 'Funktiokoodit.tbl')) Then Table ('Funktiokoodit.tbl') + '.' Else S
800$? | <K80$? | S

K80 | 800 | FUNKTIOVALIMERKIT

810I1 | 810I1  | S
810I2 | 810I2  | S

#if (RegFind(@810$t, 'Triot') >= 0)
810$m | <L81$m | TRIOT; ESITYSKOKOONPANO
#endif

#if (RegFind(@810$t, 'Kvartetot') >= 0)
810$m | <L81$m | KVARTETOT; ESITYSKOKOONPANO
#endif

#if (RegFind(@810$t, 'Kvintetot') >= 0)
810$m | <L81$m | KVINTETOT; ESITYSKOKOONPANO
#endif

#if Not Exists(@810$t) Or ((RegFind(@810$t, 'Triot') >= 0) And (RegFind(@810$t, 'Kvartetot') >= 0) And (RegFind(@810$t, 'Kvintetot') >= 0))
810$m | <L81$m | S
#endif

810$o | <L81$o | SOVITUSMERKINTO, ESITYSKOKOONPANO
810$p | <L81$p | RAAMATTU
810$4 | <L81$e | If Not (Exists(@810$e)) Then Table ('Funktiokoodit.tbl') + '.'
810$? | <L81$? | S

L81 | 810 | FUNKTIOVALIMERKIT

811I1 | 811I1  | S
811I2 | 811I2  | S
811$4 | <W81$j  | If (Not (Exists(@811$j)) And InTable(S, 'Funktiokoodit.tbl')) Then Table ('Funktiokoodit.tbl') + '.' Else S
811$? | <W81$?  | S

W81   | 811    | FUNKTIOT2

830I1 | 830I1  | S
830I2 | 830I2  | S

#if (RegFind(@830$a, 'Triot') >= 0)
830$m | <M83$m | TRIOT; ESITYSKOKOONPANO
#endif

#if (RegFind(@830$a, 'Kvartetot') >= 0)
830$m | <M83$m | KVARTETOT; ESITYSKOKOONPANO
#endif

#if (RegFind(@830$a, 'Kvintetot') >= 0)
830$m | <M83$m | KVINTETOT; ESITYSKOKOONPANO
#endif

#if Not Exists(@830$a) Or ((RegFind(@830$a, 'Triot') >= 0) And (RegFind(@830$a, 'Kvartetot') >= 0) And (RegFind(@830$a, 'Kvintetot') >= 0))
830$m | <M83$m | S
#endif

830$o | <M83$o | SOVITUSMERKINTO, ESITYSKOKOONPANO
830$p | <M83$p | S; If (Not Exists(@830$p(2))) Then RAAMATTU
830$v | <M83$v | S; Delete ('.', At Ending)
830$? | <M83$? | S

M83 | 830 | RegReplace('\\b;$v| ; $v', ' ;$v'); \
            LOPPUPISTE 

856I1 | 856I1 | S
856I2 | 856I2 | S
856$? | 856$? | S; VERKKOAINEISTO

#if (TAG != 'DEL')
???I1           | ???I1           | S
???I2           | ???I2           | S
???             | ???             | S
#endif
